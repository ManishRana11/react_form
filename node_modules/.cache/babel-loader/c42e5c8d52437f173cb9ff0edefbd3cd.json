{"ast":null,"code":"var _jsxFileName = \"/home/sankalp/Desktop/Manish/react_form/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport mongoose from \"mongoose\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmongoose.model(\"Entry\", {\n  localEmail: {\n    type: String,\n    require: true\n  },\n  leave: {\n    type: String,\n    require: true\n  },\n  saleVertical: {\n    type: String,\n    require: true\n  }\n});\nconst listsaleVertical = ['Industrial Sales', 'Black + Decker Sales', 'Healthcare Sales', 'E-Commerce Sales', 'SAARC Sales']; // const express = require(\"express\");\n// const app = express();\n// const bodyParser = require(\"body-parser\");\n// app.use(bodyParser.json());\n// const mongoose = require(\"mongoose\");\n// require(\"./Book\");\n\nconst dataBase = mongoose.model(\"Entry\"); //ddddd\n\nmongoose.connect(\"mongodb+srv://admin:admin@cluster0.clq6u.mongodb.net/test\", () => {\n  console.log(\"database connected\");\n}); // app.get('/', (req, res) => {\n//     res.send(\"default page with get\");\n// })\n// app.get('/inventory', (req, res) => {\n//     dataBase.find().then((items) => {\n//         res.json(items)\n//     }).catch(err => {\n//         throw err;\n//     })\n// })\n// app.delete('/inventory', (req, res) => {\n//     dataBase.remove().then(() => {\n//         console.log(\"removed all\");\n//         res.send(\"deleted all\");\n//     }).catch(err => {\n//         throw err;\n//     })\n// })\n// app.delete('/inventory/:id', (req, res) => {\n//     dataBase.findByIdAndRemove({ _id: req.params.id }).then(console.log(\"deleted\")).catch(err => {\n//         if (err) {\n//             throw err;\n//         }\n//     })\n//     res.send(\"deleted\");\n// })\n// app.get('/inventory/:id', (req, res) => {\n//     dataBase.findById(req.params.id).then((data) => {\n//         if (data) {\n//             res.json(data)\n//         } else {\n//             res.sendStatus(404);\n//         }\n//     }).catch(err => {\n//         if (err) {\n//             throw err;\n//         }\n//     })\n// })\n// app.post('/inventory', (req, res) => {\n//     var newData = {\n//         localEmail: req.body.localEmail,\n//         leave: req.body.leave,\n//         saleVertical: req.body.saleVertical\n//     }\n//     var data = new dataBase(newData)\n//     data.save().then(() => {\n//         console.log(\"new data created\")\n//     }).catch((err) => {\n//         throw err;\n//     })\n//     console.log(req.body);\n//     res.send(\"data sent\")\n// })\n// app.put(\"/inventory/:name\", (req, res) => {\n//     var itemName = req.params.name;\n//     dataBase.findByIdAndUpdate(itemName,req.body).then((items)=>{\n//         res.send(items);\n//     }).catch((err)=>{\n//         console.log(err);\n//     })\n// });\n// app.listen(4545, () => {\n//     console.log(\"up and running\");\n// })\n\nconst App = () => {\n  _s();\n\n  const [saleVertical, setSV] = useState([]);\n  console.log('saleVertical', saleVertical);\n  const [leave, setLV] = useState('');\n  console.log('leave', leave);\n  const [localEmail, setLE] = useState('');\n  console.log('localEmail', localEmail);\n\n  const handleSubmit = () => {\n    console.log('Result', saleVertical, leave, localEmail);\n    var newData = {\n      localEmail,\n      leave,\n      saleVertical\n    };\n    var data = new dataBase(newData);\n    data.save().then(() => {\n      console.log(\"new data created\");\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      variant: \"outlined\",\n      name: \"localEmail\",\n      value: localEmail || '',\n      onChange: event => setLE(event.target.value),\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Leave\",\n      variant: \"outlined\",\n      name: \"leave\",\n      value: leave || '',\n      onChange: event => setLV(event.target.value),\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: listsaleVertical || [],\n      getOptionLabel: o => o,\n      multiple: true,\n      value: saleVertical || [],\n      onChange: (event, newValue) => setSV(newValue),\n      renderInput: param => /*#__PURE__*/_jsxDEV(TextField, { ...param,\n        label: \"Sale's Vertical List\",\n        placeholder: \"Select a sale's vertical\",\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vxGeoeW8/ljeiErZxwjSiGI4SdA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sankalp/Desktop/Manish/react_form/src/App.js"],"names":["TextField","Autocomplete","useState","Button","mongoose","model","localEmail","type","String","require","leave","saleVertical","listsaleVertical","dataBase","connect","console","log","App","setSV","setLV","setLE","handleSubmit","newData","data","save","then","catch","err","event","target","value","o","newValue","param"],"mappings":"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","sourcesContent":["import './App.css';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport mongoose from \"mongoose\";\n\nmongoose.model(\"Entry\",{\n    localEmail: {\n        type: String,\n        require: true\n    },\n    leave: {\n        type: String,\n        require: true\n    },\n    saleVertical: {\n        type: String,\n        require: true\n    }\n});\n\nconst listsaleVertical = ['Industrial Sales',\n                          'Black + Decker Sales',\n                          'Healthcare Sales',\n                          'E-Commerce Sales',\n                          'SAARC Sales',]\n\n// const express = require(\"express\");\n// const app = express();\n// const bodyParser = require(\"body-parser\");\n// app.use(bodyParser.json());\n// const mongoose = require(\"mongoose\");\n// require(\"./Book\");\nconst dataBase = mongoose.model(\"Entry\");\n//ddddd\nmongoose.connect(\"mongodb+srv://admin:admin@cluster0.clq6u.mongodb.net/test\", () => {\n    console.log(\"database connected\");\n});\n\n// app.get('/', (req, res) => {\n//     res.send(\"default page with get\");\n// })\n                          \n                          // app.get('/inventory', (req, res) => {\n                          //     dataBase.find().then((items) => {\n                          //         res.json(items)\n                          //     }).catch(err => {\n                          //         throw err;\n                          //     })\n                          // })\n                          \n                          // app.delete('/inventory', (req, res) => {\n                          //     dataBase.remove().then(() => {\n                          //         console.log(\"removed all\");\n                          //         res.send(\"deleted all\");\n                          //     }).catch(err => {\n                          //         throw err;\n                          //     })\n                          // })\n                          \n                          // app.delete('/inventory/:id', (req, res) => {\n                          //     dataBase.findByIdAndRemove({ _id: req.params.id }).then(console.log(\"deleted\")).catch(err => {\n                          //         if (err) {\n                          //             throw err;\n                          //         }\n                          //     })\n                          //     res.send(\"deleted\");\n                          // })\n                          \n                          // app.get('/inventory/:id', (req, res) => {\n                          //     dataBase.findById(req.params.id).then((data) => {\n                          //         if (data) {\n                          //             res.json(data)\n                          //         } else {\n                          //             res.sendStatus(404);\n                          //         }\n                          //     }).catch(err => {\n                          //         if (err) {\n                          //             throw err;\n                          //         }\n                          //     })\n                          // })\n                          \n                          \n                          // app.post('/inventory', (req, res) => {\n                          //     var newData = {\n                          //         localEmail: req.body.localEmail,\n                          //         leave: req.body.leave,\n                          //         saleVertical: req.body.saleVertical\n                          //     }\n                          //     var data = new dataBase(newData)\n                          //     data.save().then(() => {\n                          //         console.log(\"new data created\")\n                          //     }).catch((err) => {\n                          //         throw err;\n                          //     })\n                          //     console.log(req.body);\n                          //     res.send(\"data sent\")\n                          // })\n                          \n                          // app.put(\"/inventory/:name\", (req, res) => {\n                          //     var itemName = req.params.name;\n                          //     dataBase.findByIdAndUpdate(itemName,req.body).then((items)=>{\n                          //         res.send(items);\n                          //     }).catch((err)=>{\n                          //         console.log(err);\n                          //     })\n                          // });\n                          \n                          // app.listen(4545, () => {\n                          //     console.log(\"up and running\");\n                          // })\n \nconst App =() => {\n\n  const [saleVertical, setSV] = useState([]);\n  console.log('saleVertical', saleVertical);\n\n  const[leave, setLV] = useState('');\n  console.log('leave', leave);\n\n  const[localEmail, setLE] = useState('');\n  console.log('localEmail', localEmail);\n\n  const handleSubmit = () => {\n    console.log('Result', saleVertical, leave,localEmail);\n    var newData = {localEmail, leave, saleVertical}\n    var data = new dataBase(newData)\n                              data.save().then(() => {\n                                  console.log(\"new data created\")\n                              }).catch((err) => {\n                                  throw err;\n                              })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        name=\"localEmail\"\n        value={localEmail || ''}\n        onChange={(event) => setLE(event.target.value)}\n        size=\"small\"\n      />\n      <TextField\n        label=\"Leave\"\n        variant=\"outlined\"\n        name=\"leave\"\n        value={leave || ''}\n        onChange={(event) => setLV(event.target.value)}\n        size=\"small\"\n      />\n      <Autocomplete\n        options={listsaleVertical || []}\n        getOptionLabel={(o) => o}\n        multiple\n        value={saleVertical || []}\n        onChange={(event, newValue) => setSV(newValue)}\n        renderInput={(param) => (\n          <TextField\n            {...param}\n            label=\"Sale's Vertical List\"\n            placeholder=\"Select a sale's vertical\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n      <Button onClick={handleSubmit}>Save Changes</Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}